name: CI model to dockerhub

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  retraining_model:
    runs-on: ubuntu-latest
    container: docker://dvcorg/cml:latest
    env:
      repo_token: ${{ secrets.GITHUBTOKEN }}

    steps:
      - uses: actions/checkout@v2

      - name: Upgrade pip
        run: pip install --upgrade pip

      - name: Install requirements
        run: pip install -r requirements.txt

      - name: Execute the training model
        run: |
          python train_recommender_hybrid.py

      - name: Generating report
        run: |
          echo "## Hybrid Model Metrics Report" > report.md

          echo "### Collaborative Metrics (Normalized, Filtered)" >> report.md
          cat metrics/hybrid_collaborative_metrics_normalized_filtered.txt >> report.md

          echo "### Content Metrics" >> report.md
          cat metrics/hybrid_content_metrics.txt >> report.md

          echo "### Content Samples" >> report.md
          cat metrics/hybrid_content_samples.txt >> report.md

          echo "### Error Histogram" >> report.md
          cml-publish metrics/hybrid_collaborative_error_histogram.png --md >> report.md

          echo "### Error Line" >> report.md
          cml-publish metrics/hybrid_collaborative_error_line.png --md >> report.md

          echo "### Predictions (Normalized, Filtered)" >> report.md
          cml-publish metrics/hybrid_collaborative_predictions_normalized_filtered.png --md >> report.md

          echo "### Scatter Plot" >> report.md
          cml-publish metrics/hybrid_collaborative_scatter.png --md >> report.md

          cml-send-comment report.md

  build_docker_image:
    needs: retraining_model
    runs-on: ubuntu-latest

    steps:
      - name: Check the repo
        uses: actions/checkout@v2

      - name: Login to dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build docker image
        run: docker build -t guissb/mlops_books_recommender:dev .

      - name: Docker push to Dockerhub
        run: docker push guissb/mlops_books_recommender:dev

      - name: Login into the server
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            docker login -u '${{ secrets.DOCKER_USERNAME }}' -p '${{ secrets.DOCKER_PASSWORD }}'
            if docker ps --all | grep backend_book_demo; then
              docker stop backend_book_demo
              docker rm backend_book_demo
            fi
            
            docker pull guissb/mlops_books_recommender:dev
            docker run -d --name backend_book_demo -p 8000:8000 guissb/mlops_books_recommender:dev
